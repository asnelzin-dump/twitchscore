from django.db import models

from twitchscore.apps.accounts.models import User


class Game(models.Model):
    user = models.ForeignKey(User)
    champion_id = models.PositiveSmallIntegerField(verbose_name='Champion')
    create_date = models.DateTimeField(verbose_name='Create date')
    game_id = models.IntegerField(verbose_name='Game ID')
    game_mode = models.CharField(max_length=100, verbose_name='Game mode')
    game_type = models.CharField(max_length=100, verbose_name='Game type')
    invalid = models.BooleanField(verbose_name='Invalid flag')
    ip_earned = models.PositiveIntegerField(verbose_name='IP Earned')
    level = models.PositiveSmallIntegerField(verbose_name='Level')
    map_id = models.PositiveSmallIntegerField(verbose_name='Map')
    spell1 = models.PositiveSmallIntegerField(verbose_name='First summoner spell ID')
    spell2 = models.PositiveSmallIntegerField(verbose_name='Second summoner spell ID')
    sub_type = models.CharField(max_length=100, verbose_name='Game sub-type')
    team_id = models.PositiveSmallIntegerField(verbose_name='Team ID')


class Player(models.Model):
    champion_id = models.PositiveSmallIntegerField(verbose_name='Champion')
    summoner_id = models.PositiveIntegerField(verbose_name='Summoner ID')
    team_id = models.PositiveSmallIntegerField(verbose_name='Team ID')
    game = models.ForeignKey(Game)


class Stats(models.Model):
    assists = models.IntegerField(verbose_name='Assists')
    barracks_killed = models.IntegerField(verbose_name='Inhibitors destroyed')
    champions_killed = models.IntegerField(verbose_name='')
    combat_player_score = models.IntegerField(verbose_name='')
    consumables_purchased = models.IntegerField(verbose_name='')
    damage_dealt_player = models.IntegerField(verbose_name='')
    double_kills = models.IntegerField(verbose_name='')
    first_blood = models.IntegerField(verbose_name='')
    gold = models.IntegerField(verbose_name='')
    gold_earned = models.IntegerField(verbose_name='')
    gold_spent = models.IntegerField(verbose_name='')
    item0 = models.IntegerField(verbose_name='')
    item1 = models.IntegerField(verbose_name='')
    item2 = models.IntegerField(verbose_name='')
    item3 = models.IntegerField(verbose_name='')
    item4 = models.IntegerField(verbose_name='')
    item5 = models.IntegerField(verbose_name='')
    item6 = models.IntegerField(verbose_name='')
    items_purchased = models.IntegerField(verbose_name='')
    killing_sprees = models.IntegerField(verbose_name='')
    largest_critical_strike = models.IntegerField(verbose_name='')
    largest_killing_spree = models.IntegerField(verbose_name='')
    largest_multi_kill = models.IntegerField(verbose_name='')
    legendary_items_created = models.IntegerField(verbose_name='')
    level = models.IntegerField(verbose_name='')
    magic_damage_dealt_player = models.IntegerField(verbose_name='')
    magic_damage_dealt_to_champions = models.IntegerField(verbose_name='')
    magic_damage_taken = models.IntegerField(verbose_name='')
    minions_denied = models.IntegerField(verbose_name='')
    minions_killed = models.IntegerField(verbose_name='')
    neutral_minions_killed = models.IntegerField(verbose_name='')
    neutral_minions_killed_enemy_jungle = models.IntegerField(verbose_name='')
    neutral_minions_killed_your_jungle = models.IntegerField(verbose_name='')
    nexus_killed = models.IntegerField(verbose_name='')
    node_capture = models.IntegerField(verbose_name='')
    node_capture_assist = models.IntegerField(verbose_name='')
    node_neutralize = models.IntegerField(verbose_name='')
    node_neutralize_assist = models.IntegerField(verbose_name='')
    num_deaths = models.IntegerField(verbose_name='')
    num_items_bought = models.IntegerField(verbose_name='')
    objective_player_score = models.IntegerField(verbose_name='')
    penta_kills = models.IntegerField(verbose_name='')
    physical_damage_dealt_player = models.IntegerField(verbose_name='')
    physical_damage_dealt_to_champions = models.IntegerField(verbose_name='')
    physical_damage_taken = models.IntegerField(verbose_name='')
    quadra_kills = models.IntegerField(verbose_name='')
    sight_wards_bought = models.IntegerField(verbose_name='')
    spell1_cast = models.IntegerField(verbose_name='')
    spell2_cast = models.IntegerField(verbose_name='')
    spell3_cast = models.IntegerField(verbose_name='')
    spell4_cast = models.IntegerField(verbose_name='')
    summon_spell1_cast = models.IntegerField(verbose_name='')
    summon_spell2_cast = models.IntegerField(verbose_name='')
    super_monster_killed = models.IntegerField(verbose_name='')
    team = models.IntegerField(verbose_name='')
    team_objective = models.IntegerField(verbose_name='')
    time_played = models.IntegerField(verbose_name='')
    total_damage_dealt = models.IntegerField(verbose_name='')
    total_damage_dealt_to_champions = models.IntegerField(verbose_name='')
    total_damage_taken = models.IntegerField(verbose_name='')
    total_heal = models.IntegerField(verbose_name='')
    total_player_score = models.IntegerField(verbose_name='')
    total_score_rank = models.IntegerField(verbose_name='')
    total_time_crowd_control_dealt = models.IntegerField(verbose_name='')
    total_units_healed = models.IntegerField(verbose_name='')
    triple_kills = models.IntegerField(verbose_name='')
    true_damage_dealt_player = models.IntegerField(verbose_name='')
    true_damage_dealt_to_champions = models.IntegerField(verbose_name='')
    true_damage_taken = models.IntegerField(verbose_name='')
    turrets_killed = models.IntegerField(verbose_name='')
    unreal_kills = models.IntegerField(verbose_name='')
    victory_point_total = models.IntegerField(verbose_name='')
    vision_wards_bought = models.IntegerField(verbose_name='')
    ward_killed = models.IntegerField(verbose_name='')
    ward_placed = models.IntegerField(verbose_name='')
    win = models.IntegerField(verbose_name='')
    game = models.ForeignKey(Game)



